"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnsupportedCI = void 0;
const _1 = require(".");
const config_1 = require("../config");
class UnsupportedCI extends _1.CIProviderBase {
    static get ciNodeTotal() {
        return undefined;
    }
    static get ciNodeIndex() {
        return undefined;
    }
    static get ciNodeBuildId() {
        return undefined;
    }
    static get ciNodeRetryCount() {
        return undefined;
    }
    static get commitHash() {
        return undefined;
    }
    static get branch() {
        return undefined;
    }
    static get userSeat() {
        return undefined;
    }
    static get fixedQueueSplit() {
        return true;
    }
    static get ciProvider() {
        if ('CODEBUILD_BUILD_ARN' in process.env) {
            return 'AWS CodeBuild';
        }
        if ('SYSTEM_TEAMFOUNDATIONCOLLECTIONURI' in process.env) {
            return 'Azure Pipelines';
        }
        if ('bamboo_planKey' in process.env) {
            return 'Bamboo';
        }
        if ('BITBUCKET_COMMIT' in process.env) {
            return 'Bitbucket Pipelines';
        }
        if ('BUDDY' in process.env) {
            return 'Buddy.works';
        }
        if ('DRONE' in process.env) {
            return 'Drone.io';
        }
        if ('BUILDER_OUTPUT' in process.env) {
            return 'Google Cloud Build';
        }
        if ('JENKINS_URL' in process.env) {
            return 'Jenkins';
        }
        if ('TEAMCITY_VERSION' in process.env) {
            return 'TeamCity';
        }
        if ((0, config_1.isCI)()) {
            return 'Other';
        }
        return null;
    }
}
exports.UnsupportedCI = UnsupportedCI;
