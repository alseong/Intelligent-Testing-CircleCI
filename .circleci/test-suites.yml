---
name: react-tests
discover: find tests -name "*.test.js" -o -name "*.test.jsx"
run:
  command: npx jest <<test.atoms>> -- --coverage --watchAll=false --reporters=default --reporters=jest-junit
  environment:
    CI: true
    JEST_JUNIT_OUTPUT_DIR: test-results
    JEST_JUNIT_OUTPUT_NAME: jest-junit.xml
outputs:
  junit: test-results/jest-junit.xml
# what does outputs: do? is it a replacement of the environment variables? also what will the output.junit do?
# Is parallelism supported with this format? it doesn;t seem to work.

# ---
# name: react-tests
# discover: find src -name "*.test.js" -o -name "*.test.jsx"
# run:
#   command: xargs -r -I {} npm test {} -- --coverage --watchAll=false --reporters=default --reporters=jest-junit --passWithNoTests
#   environment:
#     CI: true
#     JEST_JUNIT_OUTPUT_DIR: test-results
#     JEST_JUNIT_OUTPUT_NAME: jest-junit.xml
# outputs:
#   junit: test-results/jest-junit.xml

#With this implementation, we can create a central queue? Is this already done?

#how to incorporate test.atoms? This will automatically split into atoms and pipe into run npm command so that no need to use xargs

# turns out I need store_test_results to store the test results in the test-results directory...OH ok <<outputs.junit>> is not completed yet. But it seems like I can still use output.junit.
#what is the different between using outputs vs results key word? If using this, no need to set environment variables for output dir and name?
#How to use outputs.junit? How does the output value get dynamically generated? Why is it useful? In case we use parallelism and we need different output files for each test?
