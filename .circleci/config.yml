version: 2.1

parameters:
  image-tag:
    type: string
    default: "current"

executors:
  node-executor:
    docker:
      - image: cimg/node:18.17
    working_directory: ~/project

jobs:
  test-react-functionality:
    executor: node-executor
    parallelism: 4
    steps:
      - checkout
      - run:
          name: Install npm dependencies
          command: |
            npm install
            echo "‚úÖ All dependencies installed!"
      - run:
          name: Run React tests
          command: |
            export JEST_JUNIT_OUTPUT_NAME="jest-junit-${CIRCLE_NODE_INDEX}.xml"
            mkdir -p test-results
            find tests -name "*.test.js" -o -name "*.test.jsx" | circleci tests run --split-by=timings --command "xargs -r npx jest --coverage --watchAll=false --reporters=default --reporters=jest-junit --passWithNoTests"
            echo "‚úÖ React tests completed"
          environment:
            CI: true
            JEST_JUNIT_OUTPUT_DIR: test-results
            JEST_JUNIT_ADD_FILE_ATTRIBUTE: "true"
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: test-results
      - store_artifacts:
          path: coverage
          destination: coverage
  test-react-functionality-optimized:
    executor: node-executor
    parallelism: 4
    steps:
      - checkout
      - run:
          name: Install npm dependencies
          command: |
            npm install
            echo "‚úÖ All dependencies installed!"
      - run:
          name: Run React tests with optimization
          command: |
            mkdir -p test-results
            echo "üöÄ Running tests with new CircleCI test optimization..."
            circleci tests run  test-suite "react-tests" 
            echo "‚úÖ Optimized React tests completed"
            echo "üìÅ Contents after running tests:"
            ls -la
            echo "üìÅ Coverage directory contents:"
            ls -la coverage/ || echo "‚ùå Coverage directory doesn't exist"
      - store_artifacts:
          path: test-results
          destination: test-results
      - store_artifacts:
          path: coverage
          destination: coverage

workflows:
  test:
    jobs:
      - test-react-functionality
      - test-react-functionality-optimized
